name: Monthly company data Script Execution 2

on:
  schedule:
    # 每个月2号的00:00 UTC运行脚本
    - cron: '0 0 2 * *'
  workflow_dispatch: # 也允许手动触发工作流

jobs:
  run_python_script:
    runs-on: ubuntu-latest # 使用 GitHub 提供的 Ubuntu 环境

    steps:
      - name: Check if all secret exists
        run: |
          # 如果所有运行本 job 的 secrets 存在，则将 SECRETS_ALL_EXISTS 设为 true
          echo "SECRETS_ALL_EXISTS=${{ secrets.DB_HOST && secrets.DB_USER && secrets.DB_PASSWORD && secrets.DASHBOARD_DB_HOST && secrets.DASHBOARD_DB_USER && secrets.DASHBOARD_DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4 # 检出仓库代码
        if: ${{ env.SECRETS_ALL_EXISTS }}

      - name: Set up Python
        uses: actions/setup-python@v5
        if: ${{ env.SECRETS_ALL_EXISTS }}
        with:
          python-version: '3.12' # 设置 Python 版本

      - name: Install Python dependencies
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start ClickHouse service
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: |
          docker run -d --name clickhouse-server --ulimit nofile=262144:262144 -p 9000:9000 clickhouse/clickhouse-server
          sleep 30

      - name: List running containers
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: docker ps -a

      - name: Check ClickHouse logs
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: docker logs clickhouse-server

      - name: Test ClickHouse query
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: |
          docker exec -i clickhouse-server clickhouse-client --query "SELECT 1"

      - name: Run the Python script
        if: ${{ env.SECRETS_ALL_EXISTS }}
        run: |
          cd dashboard/company/scripts
          python workflow_2.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DASHBOARDS_DB_HOST: ${{ secrets.DASHBOARD_DB_HOST }}
          DASHBOARDS_DB_USER: ${{ secrets.DASHBOARD_DB_USER }}
          DASHBOARDS_DB_PASSWORD: ${{ secrets.DASHBOARD_DB_PASSWORD }}
